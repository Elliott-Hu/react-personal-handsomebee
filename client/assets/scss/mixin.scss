@mixin text-ellipse() {
  word-break: keep-all;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin mult-text-ellipse($number) {
  display: -webkit-box;
  -webkit-line-clamp: $number;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hidden-text($height) {
  height: $height;
  overflow: hidden;
}

$breakpoints: ( 'xs': 'only screen and ( min-width: 480px)', 'sm': 'only screen and ( min-width: 768px)', 'md': 'only screen and ( min-width: 992px)', 'lg': 'only screen and ( min-width: 1200px)', 'pc-sm': 'only screen and ( min-width: 1024px)', 'pc-md': 'only screen and ( min-width: 1440px)', 'pc-lg': 'only screen and ( min-width: 1920px)', ) !default;
@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}

@mixin clearfix() {
  &:after {
    height: 0;
    clear: both;
    content: "";
    display: block;
    overflow: hidden;
    visibility: hidden;
  }
}

@mixin border-box() {
  box-sizing: border-box;
  * {
    box-sizing: border-box;
  }
}

@mixin absolute-center() {
  position: absolute;
  margin: auto;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// flex Box 
@mixin align-items($value: center) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  }
  @else if $value==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  }
  @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

@mixin align-self($value: auto) {
  // Col位置的定义
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value==flex-start {
    -ms-flex-item-align: start;
  }
  @else if $value==flex-end {
    -ms-flex-item-align: end;
  }
  @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

//是否换行
@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value==nowrap {
    -ms-flex-wrap: none;
  }
  @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin flex-row() {
  display: flex;
  @include align-items();
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  -webkit-box-flex: $fg;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
  max-width: $fb;
}

@mixin btn() {
  font-size: 14px;
  width: 120px;
  height: 40px;
  border: 1px solid #ccc;
  border-radius: 5px;
  background: #f0f0f0;
  text-align: center;
  line-height: 40px;
  color: $nf-btn-font;
}

@mixin input() {
  width: 740px;
  height: 40px;
  border: 1px solid #ccc;
  margin-left: 12px;
  outline: none;
  padding-left: 10px;
}

@mixin textarea() {
  width: 100%;
  height: 80px;
  border: 1px solid #E5E5E5;
  outline: none;
  resize: none;
  padding: 10px 15px;
  box-sizing: border-box;
}

@mixin avatar($size) {
  width: $size;
  height: $size;
  overflow: hidden;
  border-radius: 50%;
  position: relative;
  transform: rotate(0);
  img {
    width: 100%;
    @include absolute-center();
  }
}

@mixin block-padding() {
  padding-top: 45px;
  padding-bottom: 45px;
}